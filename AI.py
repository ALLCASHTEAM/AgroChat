'''
Модель берты которая по контексту должна отвечать
но так как контекст очень хуевый, нам нечего делать кроме как обосраться
'''
import torch
import numpy as np
from transformers import AutoTokenizer, AutoModelForQuestionAnswering

# Используем токенизатор и модель
tokenizer = AutoTokenizer.from_pretrained("timpal0l/mdeberta-v3-base-squad2")
model = AutoModelForQuestionAnswering.from_pretrained("timpal0l/mdeberta-v3-base-squad2")

# Задаем текст с товарами, разделенными символом ';'
text = """Название товара: Биостим Свекл; Тип Биостим Свекл: аминокислоты, полисахариды, макро- и микроэлементы; Биостим Свекл - это Жидкое аминокислотное удобрение-биостимулятор для листовых подкормок сахарной свеклы; Достоинства Биостим Свекл перед другими удобрениями: Удобрение-биостимулятор с микроэлементами для сахарной, столовой свеклы Стимулирует обмен веществ в растениях, Поддерживает баланс питательных веществ в период вегетации, Защищает от воздействия абиотических стрессов, Восстанавливает продуктивность культур после действия стресс-факторов, Повышает устойчивость растений к болезням, Улучшает количественные и качественные параметры урожая;
Название товара: Биостим Стар;Тип Биостим Стар: аминокислоты, полисахариды, макро- и микроэлементы; Биостим Стар - это Жидкое аминокислотное удобрение-биостимулятор для предпосевной обработки семян и посадочного материала, а также для корневых подкормок рассады; Достоинства Биостим Стар: Активатор энергии и стимулятор прорастания семянБолее ранние и дружные всходыУскоренное формирование корневой системыУлучшение приживаемости рассады и минимизация послепересадочных стрессов;
Название товара: Биостим Кукуруз;Тип Биостим Кукуруз: аминокислоты, полисахариды, макро- и микроэлементы; Биостим Кукуруз это - Жидкое аминокислотное удобрение-биостимулятор для листовых подкормок кукурузы; Достоинства Биостим Кукуруз: Удобрение-биостимулятор с микроэлементами, разработанное специально для кукурузы на зерно и силос, Стимулирует обмен веществ в растениях, Поддерживает баланс питательных веществ в период вегетации, Защищает от воздействия абиотических стрессов, Восстанавливает продуктивность культур после действия стресс-факторов, Повышает устойчивость растений к болезням, Улучшает количественные и качественные параметры урожая;
Название товара: Биостим Рос; Тип Биостим Рос: аминокислоты, полисахариды, макро- и микроэлементы; Биостим Рос - это Жидкое аминокислотное удобрение-биостимулятор для листовых подкормок сельскохозяйственных культур в начале вегетации; Достоинства Биостим Рос: Стимулирует вегетативный рост в начале весенней вегетации, Активирует ростовые процессы в условиях затяжной весны и других неблагоприятных погодных условиях, Восстанавливает ослабленные, поврежденные посевы после перезимовки, Защищает от воздействия абиотических стресс-факторов (возвратных заморозков весной, засухи и т.д.),Является активатором фотосинтеза Подходит для всех культур в начале весенней вегетации;"""

# Ввод вопроса пользователем
question = input('Введите вопрос: ')

# Токенизируем вопрос и текст товаров
tokenized = tokenizer.encode_plus(question, text, add_special_tokens=False, return_tensors="pt")

# Получаем токены
tokens = tokenizer.convert_ids_to_tokens(tokenized['input_ids'][0])

# Запускаем модель для получения ответа
outputs = model(**tokenized)

# Получаем позиции начала и конца ответа в токенах
# Получаем позиции начала и конца ответа в токенах
start_index = torch.argmax(outputs.start_logits)
end_index = torch.argmax(outputs.end_logits)

# Получаем текст ответа из токенов
answer = tokenizer.decode(tokenized['input_ids'][0][start_index:end_index + 1], skip_special_tokens=True)

# Разделяем текст на строки товаров
items = text.split(";")

# Функция для поиска ответа в строке товара
def find_answer_in_item(item, question):
    if question.lower() in item.lower():
        return item.strip()
    return None

# Ищем ответ среди строк товаров
found_answer = None
for item in items:
    found_answer = find_answer_in_item(item, question)
    if found_answer:
        break

# Выводим результат
if found_answer:
    print('Вопрос:', question)
    print('Ответ:', found_answer)
else:
    print('Ответ не найден.')
